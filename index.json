[{"content":"Pendahuluan Jadi, ceritanya waktu saya lagi mencatat pelajaran bahasa Inggris dalam bentuk Markdown, Tiba-tiba saya keingat artikel yang bahas cara presentasi di terminal. Setelah itu, saya cari-cari artikel itu lagi dan tools yang bisa melakukan presentasi di terminal.\nSelang beberapa waktu, akhirnya saya menemukan 2 tools keren yang saya rekomendasikan untuk melakukan presentasi di terminal dan mencobanya. Apa aja sih tools-nya? Yuk, simak terus postingan saya ini!\nmdp  mdp A command-line based markdown presentation tool.\n Sesuai deskripsinya di halaman GitHub-nya, mdp adalah sebuah tool berbasis CLI untuk melakukan presentasi dengan file markdown di terminal.\nFitur-fitur yang ada di tool ini di antaranya.\n Kecil, Ringan dan Cepat, ditulis dalam bahasa pemrograman C serta ukuran file binary-nya hanya 44 Kb saja. Menggunakan file format Markdown, format ini cukup mudah dipelajari dan membuat kita bisa fokus menulis. Dukungan animasi Fading, membuat presentasi terlihat lebih estetik.  Untuk instalasi-nya, kita bisa menggunakan Package Manager atau meng-compile-nya sendiri.\nDownload dan Compile sendiri:\ngit clone https://github.com/visit1985/mdp.git cd mdp make make install mdp sample.md Arch Linux, Manjaro dan turunannya:\nsudo pacman -S mdp Debian, Ubuntu dan turunannya:\nsudo apt install mdp present  present, A terminal-based presentation tool with colors and effects.\n present adalah sebuah tool untuk melakukan presentasi di terminal yang dibuat dengan bahasa Python.\nFitur-fitur yang ada di tool ini di antaranya.\n Menggunakan file format Markdown, format ini cukup mudah dipelajari dan membuat kita bisa fokus menulis. Bisa menampilkan gambar. Colors dan Effect, kita bisa menambahkan warna dan efek pada masing-masing slide. Codio, kita dapat merekam blok kode yang bisa dimainkan. Untuk lebih jelasnya lihat ini.  Untuk instalasi-nya, kita bisa melakukannya dengan pip:\npip install present Lainnya Selain 2 tools di atas, berikut ini tool lainnya untuk menampilkan presentasi di terminal.\n tpp, text presentation program and is an ncurses-based presentation tool. sent, Simple plaintext presentation tool.   Catatan: 2 tools di atas belum saya coba.\n Simpulan Nah, itu dia 2 tools yang bisa digunakan untuk melakukan presentasi di terminal. Silakan dicoba sendiri, tentukan mana yang paling cocok untuk kalian sendiri.\nSekian postingan saya kali ini. Bila ada masukan/saran/kritik, silakan manfaat fitur komentar di bawah. Terima kasih.\nReferensi  https://opensource.com/article/19/8/command-line-presentation-tools https://itsfoss.com/presentation-linux-terminal/  ","permalink":"https://atalazer.github.io/posts/presentasi-terminal/","summary":"Pendahuluan Jadi, ceritanya waktu saya lagi mencatat pelajaran bahasa Inggris dalam bentuk Markdown, Tiba-tiba saya keingat artikel yang bahas cara presentasi di terminal. Setelah itu, saya cari-cari artikel itu lagi dan tools yang bisa melakukan presentasi di terminal.\nSelang beberapa waktu, akhirnya saya menemukan 2 tools keren yang saya rekomendasikan untuk melakukan presentasi di terminal dan mencobanya. Apa aja sih tools-nya? Yuk, simak terus postingan saya ini!\nmdp  mdp A command-line based markdown presentation tool.","title":"Bisakah Presentasi di Terminal?"},{"content":"Permasalahan Jadi selama ini saya menggunakan Zsh sebagai interactive shell yang saya gunakan. Saya mengganti default shell di Linux, yaitu Bash dengan Zsh karena Zsh memiliki lebih banyak fitur. Selain Bash dan Zsh, saya juga pernah menggunakan Fish. Akan tetapi saya kembali lagi ke Zsh karena merasa lebih nyaman.\nAgar lebih dalam menggunakannya, saya juga menggunakan zinit sebagai plugin manager. Sebelumnya saya pernah menggunakan Oh-My-Zsh, yaitu sebuah framework untuk Zsh. Akan tetapi, saya merasa Oh-My-Zsh terlalu lambat di laptop saya. Akhirnya saya menemukan zinit yang dapat memenuhi kebutuhan saya.\nAkan tetapi, saat menggunakan zinit, Zsh harus menunggu beberapa detik bahkan hampir sampai semenit untuk dimuat. Setelah beberapa kali menelusuri internet, saya tidak menemukan jawaban yang sesuai. Akhirnya saya menyerah menggunakan zinit.\nPenyelesaian Secara tidak sengaja, saya akhirnya dapat menyelesaikan masalah ini. Yaitu dengan menambahkan baris di bawah ini ke dalam file .zshrc:\nsetopt promptsubst Yey, akhirnya saya tidak perlu menunggu lama lagi kalo mau pakai Zsh + zinit. Goodbye Fish.\nDemikian yang dapat saya bagikan dalam tulisan saya kali ini, terima kasih.\n","permalink":"https://atalazer.github.io/posts/zsh-zinit-lama-saat-init/","summary":"Permasalahan Jadi selama ini saya menggunakan Zsh sebagai interactive shell yang saya gunakan. Saya mengganti default shell di Linux, yaitu Bash dengan Zsh karena Zsh memiliki lebih banyak fitur. Selain Bash dan Zsh, saya juga pernah menggunakan Fish. Akan tetapi saya kembali lagi ke Zsh karena merasa lebih nyaman.\nAgar lebih dalam menggunakannya, saya juga menggunakan zinit sebagai plugin manager. Sebelumnya saya pernah menggunakan Oh-My-Zsh, yaitu sebuah framework untuk Zsh. Akan tetapi, saya merasa Oh-My-Zsh terlalu lambat di laptop saya.","title":"Zsh Zinit Lama Saat Init"},{"content":"Pendahuluan Pada tulisan kali ini, saya ingin membagikan pencarian saya dalam membandingkan tema terang dan gelap. Sebelum itu, saya menulis postingan ini untuk meringkas hasil pencarian saya. Untuk mencari tahu lebih lanjut lagi, pembaca dimohon untuk membaca referensi-referensi saya di bawah. Dan juga jangan ragu dan sungkan untuk berpendapat lewat komentar di bawah.\nManakah yang lebih baik, tema terang atau gelap? Berikut hasil pencarian saya mengenai topik ini.\nTema Terang  Cocok digunakan saat pencahayaan cukup terang, seperti saat pagi hari, siang hari, atau di luar rumah. Warna hitam pada latarbelakang putih baik untuk membaca, karena otak lebih mudah dalam menerimanya. Cocok untuk membaca dalam jangka waktu yang lama.  Tema Gelap  Cocok digunakan saat pencahayaan kurang, seperti malam hari, sore hari, atau di ruangan yang gelap. Dapat menghemat daya(khusus untuk layar AMOLED dan OLED) Baik dalam efek jangka panjang. Cocok untuk penderita gangguan pada mata seperti penyakit katarak.  Kesimpulan Jadi, tema yang kita gunakan perlu disesuaikan dengan kondisi sekitar dan kegiatan apa yang kita lakukan. Tema terang, cocok untuk dipakai saat pencahayaan cukup dan baik untuk membaca. Sebaliknya, tema gelap cocok dipakai saat pencahayaan kurang.\nDemikian yang dapat saya bagikan dalam postingan ini, terima kasih.\nReferensi  https://www.nngroup.com/articles/dark-mode/ [Direkomendasikan] https://rxoptical.com/eye-health/is-dark-mode-better-for-your-eyes/ https://www.maketecheasier.com/are-dark-themes-better-for-eyes-battery/ https://www.quora.com/Are-dark-themes-for-IDEs-and-code-editors-good-for-the-eyes?share=1  ","permalink":"https://atalazer.github.io/posts/light-vs-dark-theme/","summary":"Pendahuluan Pada tulisan kali ini, saya ingin membagikan pencarian saya dalam membandingkan tema terang dan gelap. Sebelum itu, saya menulis postingan ini untuk meringkas hasil pencarian saya. Untuk mencari tahu lebih lanjut lagi, pembaca dimohon untuk membaca referensi-referensi saya di bawah. Dan juga jangan ragu dan sungkan untuk berpendapat lewat komentar di bawah.\nManakah yang lebih baik, tema terang atau gelap? Berikut hasil pencarian saya mengenai topik ini.\nTema Terang  Cocok digunakan saat pencahayaan cukup terang, seperti saat pagi hari, siang hari, atau di luar rumah.","title":"Light vs Dark Theme"},{"content":"Pendahuluan Pada saat berselancar di internet, pastinya kita harus memasukkan sebuah URL untuk pergi ke sebuah website. Tetapi, apasih yang dimaksud dengan URL. Yuk kita gali lebih dalam!\nPengertian URL URL atau Uniform Resource Locator adalah sebuah alamat dari suatu website. URL berfungsi membawa kita ke sebuah website secara spesifik. Misalnya jika kita ingin membuka Facebook, maka kita harus memasukkan URL-nya ke Address Bar di Browser kita yaitu https://www.facebook.com/\nFungsi URL  Untuk memahami fungsi URL, ada baiknya kita membuat analogi sederhana agar lebih mudah memahaminya.\n Website dapat kita analogikan/diperumpamakan sebagai rumah. Disetiap rumah pastinya terdapat si pemilik, alamat, dan koordinat pada peta. Berikut tabel perumpamaan antara website dan rumah:\n   Website Rumah     Domain Pemilik rumah   URL Alamat rumah   IP Address Koordinat rumah    Selain itu, URL digunakan untuk mempermudah kita supaya lebih mudah dalam mengakses sebuah website. Sebab, dulu sebelum adanya URL, untuk masuk ke sebuah website kita perlu memasukkan IP Address dari website tersebut. Oleh karena itu, munculah konsep/gagasan mengenai URL agar mempermudah memasuki sebuah website.\nBagian-Bagian URL Sebagaimana yang diperumpamakan, URL adalah sebuah alamat rumah. Alamat rumah biasanya terdiri dari beberapa bagian seperti nama pemilik rumah, nama jalan, nama desa, kode pos, dan lain-lain. URL-pun juga demikian, bagian-bagian pada URL antara lain:\n Scheme, bagian yang mengawali sebuah URL. Biasanya digunakan untuk sebuah protokol seperti https, http, ftp, dan lain-lain. Subdomain, bagian dari domain utama yang bisa berdiri sendiri atau bisa dibilang \u0026ldquo;anak\u0026rdquo; dari domain utama. Domain/Second Level Domain(SLD), nama sebuah website, misalnya facebook, instagram, github, dan lain-lain. Top Level Domain(TLD), ekstensi dari nama sebuah website, misalnya .com, .net, .org, dan lain-lain. Subdirectory, ekor dari URL yang menampilkan halaman spesifik dari sebuah website.  Contoh 1: https://github.com/atalazer\n https, adalah Scheme. github, adalah Domain. com, adalah Top Level Domain. atalazer, adalah Subdirectory  Contoh 2: https://atalazer.github.io/tags/\n https, adalah Scheme. atalazer, adalah Subdomain github, adalah Domain. io, adalah Top Level Domain. tags, adalah Subdirectory  Kesimpulan Kesimpulan yang dapat kita ambil antara lain:\n URL atau Uniform Resource Locator adalah sebuah alamat dari suatu website. Berfungsi untuk memudahkan dalam memasuki sebuah website. Terdiri dari Scheme, Second Level Domain, Top Level Domain, Subdomain, Subdirectory.  Referensi  https://www.niagahoster.co.id/blog/apa-itu-url/ https://www.selamatpagi.id/pengertian-url/ https://buggzilla.wordpress.com/2012/11/10/perbedaan-uri-dan-url/  ","permalink":"https://atalazer.github.io/posts/apa-itu-url/","summary":"Pendahuluan Pada saat berselancar di internet, pastinya kita harus memasukkan sebuah URL untuk pergi ke sebuah website. Tetapi, apasih yang dimaksud dengan URL. Yuk kita gali lebih dalam!\nPengertian URL URL atau Uniform Resource Locator adalah sebuah alamat dari suatu website. URL berfungsi membawa kita ke sebuah website secara spesifik. Misalnya jika kita ingin membuka Facebook, maka kita harus memasukkan URL-nya ke Address Bar di Browser kita yaitu https://www.facebook.com/\nFungsi URL  Untuk memahami fungsi URL, ada baiknya kita membuat analogi sederhana agar lebih mudah memahaminya.","title":"Apa Itu URL?"},{"content":"Pendahuluan Pada kesempatan kali ini saya akan membagikan bagaimana saya melakukan konfigurasi untuk keperluan Web Development menggunakan Tailwind CSS di Neovim 0.5.\nPre-Requisite Sebelum melakukan konfigurasi, kita harus memenuhi beberapa syarat, antara lain:\n tailwindcss-language-server browser-sync (optional)  Instalasi # Install Language Server untuk tailwind css. npm install -g tailwindcss-language-server # (Optional) browser-sync untuk live reload. npm install -g browser-sync Konfigurasi Tambahkan Baris Berikut ke dalam konfigurasi LSP neovim kalian.\nlocal configs = require(\u0026#34;lspconfig/configs\u0026#34;) local util = require(\u0026#34;lspconfig/util\u0026#34;) local nvim_lsp = require(\u0026#34;lspconfig\u0026#34;) local server_name = \u0026#34;tailwindcss-language-server\u0026#34; configs[server_name] = { default_config = { cmd = { server_name, \u0026#34;--stdio\u0026#34; }, filetypes = { \u0026#34;css\u0026#34;, \u0026#34;html\u0026#34;, \u0026#34;svelte\u0026#34;, \u0026#34;typescriptreact\u0026#34; }, root_dir = util.root_pattern(\u0026#34;tailwind.config.js\u0026#34;, \u0026#34;package.json\u0026#34;, \u0026#34;.git\u0026#34;), settings = {} }, docs = { description = [[ ]], default_config = { root_dir = [[ ]], }, }, } nvim_lsp[server_name].setup({}) ⚠️ Update 2021-06-14 Sekarang sudah ada default config untuk tailwindcss di nvim-lspconfig. Jadi sekarang kita tidak perlu lagi membuat client Language Server-nya secara manual, Tinggal tambahkan baris berikut ke konfigurasi LSP neovim kita:\nrequire(\u0026#34;lspconfig\u0026#34;).tailwindcss.setup{} Penerapan  Pertama, kita buat directory baru untuk project yang akan digarap:  mkdir web-tailwind cd web-tailwind touch index.html Install tailwind-css:  npm init npm install tailwindcss postcss postcss-cli autoprefixer Buat directory baru untuk menyimpan file .css dan buat file bernama tailwind.css:  mkdir -p src/{styles,scripts} touch src/styles/tailwind.css Edit file tailwind.css dengan baris berikut:  @tailwind base; @tailwind components; @tailwind utilities; Buat dan edit file postcss.config.js pada root directory (tempat file index.html):  module.exports = { plugins: { tailwindcss: {}, autoprefixer: {}, } } Edit package.json pada root directory:  { ... \u0026#34;scripts\u0026#34;: { \u0026#34;watch:css\u0026#34;: \u0026#34;postcss src/styles/tailwind.css -o src/styles/style.css -w\u0026#34;, \u0026#34;build:css\u0026#34;: \u0026#34;postcss src/styles/tailwind.css -o src/styles/style.css\u0026#34; }, ... } Jalankan command npm run watch:css di root directory (Optional) Jalankan command browser-sync start --server --files . di root directory. Edit file index.html and Happy coding :) :  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tailwind CSS\u0026lt;/title\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width,initial-scale=1.0\u0026#34; /\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;/src/styles/style.css\u0026#34; /\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt;\u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Kesimpulan Nah itu dia, bagaimana cara saya Mengkonfigurasi Neovim untuk Proses Web Development menggunakan Framework Tailwind CSS. Terima Kasih :)\n","permalink":"https://atalazer.github.io/posts/konfigurasi-tailwindcss-neovim/","summary":"Pendahuluan Pada kesempatan kali ini saya akan membagikan bagaimana saya melakukan konfigurasi untuk keperluan Web Development menggunakan Tailwind CSS di Neovim 0.5.\nPre-Requisite Sebelum melakukan konfigurasi, kita harus memenuhi beberapa syarat, antara lain:\n tailwindcss-language-server browser-sync (optional)  Instalasi # Install Language Server untuk tailwind css. npm install -g tailwindcss-language-server # (Optional) browser-sync untuk live reload. npm install -g browser-sync Konfigurasi Tambahkan Baris Berikut ke dalam konfigurasi LSP neovim kalian.","title":"Konfigurasi Tailwind CSS di Neovim"},{"content":" NOTE: Semua perintah di bawah ini dilakukan sebagai root Untuk itu, sebelumnya eksekusi perintah sudo su\n Menginstall Artix Package Mendownload Artix Package openrc pacman -Sw base base-devel openrc-system grub linux linux-headers elogind-openrc openrc netifrc grub mkinitcpio archlinux-mirrorlist net-tools rsync nano lsb-release esysusers etmpfiles runit pacman -Sw base base-devel openrc-system grub linux linux-headers elogind-openrc openrc netifrc grub mkinitcpio archlinux-mirrorlist net-tools rsync nano lsb-release esysusers etmpfiles s6 pacman -Sw base base-devel s6-system grub linux linux-headers s6 elogind-s6 grub mkinitcpio archlinux-mirrorlist net-tools rsync nano lsb-release esysusers etmpfiles Menginstall Init openrc pacman -S base base-devel openrc-system grub linux linux-headers elogind-openrc openrc netifrc grub mkinitcpio archlinux-mirrorlist net-tools rsync nano lsb-release esysusers etmpfiles runit pacman -S base base-devel openrc-system grub linux linux-headers elogind-openrc openrc netifrc grub mkinitcpio archlinux-mirrorlist net-tools rsync nano lsb-release esysusers etmpfiles s6 pacman -S base base-devel s6-system grub linux linux-headers s6 elogind-s6 grub mkinitcpio archlinux-mirrorlist net-tools rsync nano lsb-release esysusers etmpfiles Menginstall dan Mengaktifkan Init Script pacman -S --needed acpid-init alsa-utils-init autofs-init cronie-init cups-init fuse-init haveged-init hdparm-init openssh-init samba-init syslog-ng-init  Ganti init dengan openrc/runit/s6\n Mengaktifkan Init Script openrc for daemon in acpid alsasound autofs cronie cupsd xdm fuse haveged hdparm smb sshd syslog-ng; do rc-update add $daemon default; done rc-update add udev sysinit runit for daemon in acpid alsasound autofs cronie cupsd dbus elogind xdm fuse haveged hdparm smb sshd syslog-ng; do ln -s /etc/runit/sv/$daemon /etc/runit/runsvdir/default; done s6 s6-rc-bundle -c /etc/s6/rc/compiled add default acpid autofs cronie cupsd elogind xdm fuse haveged hdparm smb sshd syslog-ng Memperbarui bootloader dan kernel initramfs Membuat kembali initramfs dan file konfigurasi grub mkinitcpio -P update-grub Reinstall GRUB UEFI: grub-install --target=x86_64-efi --efi-directory=\u0026lt;esp_mount\u0026gt; --bootloader-id=grub  Ganti \u0026lt;esp_mount\u0026gt; dengan lokasi mount EFI System ( Biasanya di /boot/EFI )\n BIOS: grub-install /dev/sdX # (replace sdX with sda, sdb, or whatever your disk is) Reboot sync umount -a mount -f / -o remount,ro echo s \u0026gt;| /proc/sysrq-trigger echo u \u0026gt;| /proc/sysrq-trigger echo b \u0026gt;| /proc/sysrq-trigger Troubleshooting Masalah pada D-Bus dbus-uuidgen \u0026gt;| /etc/machine-id Referensi Artix Migration Guide Artix Troubleshooting\n","permalink":"https://atalazer.github.io/posts/artix-linux-berpindah-init/","summary":"NOTE: Semua perintah di bawah ini dilakukan sebagai root Untuk itu, sebelumnya eksekusi perintah sudo su\n Menginstall Artix Package Mendownload Artix Package openrc pacman -Sw base base-devel openrc-system grub linux linux-headers elogind-openrc openrc netifrc grub mkinitcpio archlinux-mirrorlist net-tools rsync nano lsb-release esysusers etmpfiles runit pacman -Sw base base-devel openrc-system grub linux linux-headers elogind-openrc openrc netifrc grub mkinitcpio archlinux-mirrorlist net-tools rsync nano lsb-release esysusers etmpfiles s6 pacman -Sw base base-devel s6-system grub linux linux-headers s6 elogind-s6 grub mkinitcpio archlinux-mirrorlist net-tools rsync nano lsb-release esysusers etmpfiles Menginstall Init openrc pacman -S base base-devel openrc-system grub linux linux-headers elogind-openrc openrc netifrc grub mkinitcpio archlinux-mirrorlist net-tools rsync nano lsb-release esysusers etmpfiles runit pacman -S base base-devel openrc-system grub linux linux-headers elogind-openrc openrc netifrc grub mkinitcpio archlinux-mirrorlist net-tools rsync nano lsb-release esysusers etmpfiles s6 pacman -S base base-devel s6-system grub linux linux-headers s6 elogind-s6 grub mkinitcpio archlinux-mirrorlist net-tools rsync nano lsb-release esysusers etmpfiles Menginstall dan Mengaktifkan Init Script pacman -S --needed acpid-init alsa-utils-init autofs-init cronie-init cups-init fuse-init haveged-init hdparm-init openssh-init samba-init syslog-ng-init  Ganti init dengan openrc/runit/s6","title":"Artix Linux - Berpindah Init"},{"content":" NOTE: Semua perintah di bawah ini dilakukan sebagai root Untuk itu, sebelumnya eksekusi perintah sudo su\n Menyiapkan Repositori mv -vf /etc/pacman.conf /etc/pacman.conf.arch curl https://gitea.artixlinux.org/packagesP/pacman/raw/branch/master/trunk/pacman.conf -o /etc/pacman.conf mv -vf /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist-arch curl https://gitea.artixlinux.org/packagesA/artix-mirrorlist/raw/branch/master/trunk/mirrorlist -o /etc/pacman.d/mirrorlist cp -vf /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.artix Jika kamu menggunakan paket multilib, jangan lupa uncomment baris berikut di /etc/pacman.conf:\n[lib32] Include = /etc/pacman.d/mirrorlist [multilib] Include = /etc/pacman.d/mirrorlist-arch Membersihkan Paket dari Arch pacman -Scc \u0026amp;\u0026amp; pacman -Syy Menginstall Artix Keyring Menurunkan Security Level pacman # /etc/pacman.conf #SigLevel = Required DatabaseOptional SigLevel = Never Install Artix PGP Keyring pacman -S artix-keyring pacman-key --populate artix pacman-key --lsign-key 95AEC5D0C1E294FC9F82B253573A673A53C01BC2 Mengembalikan Security Level pacman # /etc/pacman.conf SigLevel = Required DatabaseOptional # SigLevel = Never Menginstall Artix Package Backup List Daemon systemctl list-units --state=running | grep -v systemd | awk \u0026#39;{print $1}\u0026#39; | grep service \u0026gt; daemon.list Mendownload Artix Package openrc pacman -Sw base base-devel openrc-system grub linux linux-headers elogind-openrc openrc grub mkinitcpio archlinux-mirrorlist networkmanager rsync vim lsb-release esysusers etmpfiles runit pacman -Sw base base-devel runit-system grub linux linux-headers runit elogind-runit grub mkinitcpio archlinux-mirrorlist net-tools rsync nano lsb-release esysusers etmpfiles s6 pacman -Sw base base-devel s6-system grub linux linux-headers s6 elogind-s6 grub mkinitcpio archlinux-mirrorlist networkmanager rsync vim lsb-release esysusers etmpfiles Menghapus systemd pacman -Rdd --noconfirm systemd systemd-libs systemd-sysvcompat pacman-mirrorlist dbus rm -fv /etc/resolv.conf Mengembalikan Artix Mirrolist yang terhapus: cp -vf /etc/pacman.d/mirrorlist.artix /etc/pacman.d/mirrorlist Menginstall Init openrc pacman -S base base-devel openrc-system grub linux linux-headers elogind-openrc openrc grub mkinitcpio archlinux-mirrorlist networkmanager rsync vim lsb-release esysusers etmpfiles runit pacman -S base base-devel runit-system grub linux linux-headers runit elogind-runit grub mkinitcpio archlinux-mirrorlist net-tools rsync nano lsb-release esysusers etmpfiles s6 pacman -S base base-devel s6-system grub linux linux-headers s6 elogind-s6 grub mkinitcpio archlinux-mirrorlist networkmanager rsync vim lsb-release esysusers etmpfiles Menginstall Ulang Package dari Repositori Artix export LC_ALL=C pacman -Sl system | grep installed | cut -d\u0026#34; \u0026#34; -f2 | pacman -S - pacman -Sl world | grep installed | cut -d\u0026#34; \u0026#34; -f2 | pacman -S - pacman -Sl galaxy | grep installed | cut -d\u0026#34; \u0026#34; -f2 | pacman -S - pacman -Sl lib32 | grep installed | cut -d\u0026#34; \u0026#34; -f2 | pacman -S - Menginstall dan Mengaktifkan Init Script pacman -S --needed acpid-init alsa-utils-init autofs-init cronie-init cups-init fuse-init haveged-init hdparm-init openssh-init samba-init syslog-ng-init  Ganti init dengan openrc/runit/s6\n Mengaktifkan Init Script openrc for daemon in acpid alsasound autofs cronie cupsd xdm fuse haveged hdparm smb sshd syslog-ng; do rc-update add $daemon default; done rc-update add udev sysinit runit for daemon in acpid alsasound autofs cronie cupsd dbus elogind xdm fuse haveged hdparm smb sshd syslog-ng; do ln -s /etc/runit/sv/$daemon /etc/runit/runsvdir/default; done s6 s6-rc-bundle -c /etc/s6/rc/compiled add default acpid autofs cronie cupsd elogind xdm fuse haveged hdparm smb sshd syslog-ng Hapus Systemd Lebih Banyak for user in journal journal-gateway timesync network bus-proxy journal-remote journal-upload resolve coredump; do userdel systemd-$user done rm -vfr /{etc,var/lib}/systemd Memperbarui bootloader dan kernel initramfs Membuat kembali initramfs dan file konfigurasi grub mkinitcpio -P update-grub Reinstall GRUB UEFI: grub-install --target=x86_64-efi --efi-directory=\u0026lt;esp_mount\u0026gt; --bootloader-id=grub  Ganti \u0026lt;esp_mount\u0026gt; dengan lokasi mount EFI System ( Biasanya di /boot/EFI )\n BIOS: grub-install /dev/sdX # (replace sdX with sda, sdb, or whatever your disk is) Reboot sync umount -a mount -f / -o remount,ro echo s \u0026gt;| /proc/sysrq-trigger echo u \u0026gt;| /proc/sysrq-trigger echo b \u0026gt;| /proc/sysrq-trigger Referensi Artix Migration Guide\n","permalink":"https://atalazer.github.io/posts/artix-linux-migrasi/","summary":"NOTE: Semua perintah di bawah ini dilakukan sebagai root Untuk itu, sebelumnya eksekusi perintah sudo su\n Menyiapkan Repositori mv -vf /etc/pacman.conf /etc/pacman.conf.arch curl https://gitea.artixlinux.org/packagesP/pacman/raw/branch/master/trunk/pacman.conf -o /etc/pacman.conf mv -vf /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist-arch curl https://gitea.artixlinux.org/packagesA/artix-mirrorlist/raw/branch/master/trunk/mirrorlist -o /etc/pacman.d/mirrorlist cp -vf /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.artix Jika kamu menggunakan paket multilib, jangan lupa uncomment baris berikut di /etc/pacman.conf:\n[lib32] Include = /etc/pacman.d/mirrorlist [multilib] Include = /etc/pacman.d/mirrorlist-arch Membersihkan Paket dari Arch pacman -Scc \u0026amp;\u0026amp; pacman -Syy Menginstall Artix Keyring Menurunkan Security Level pacman # /etc/pacman.","title":"Artix Linux - Migrasi dari Arch Linux"},{"content":" Baca Ini Dulu Vim Text Editor\n Basic Keybindings Vim Dasar-dasar keybinding di Text Editor Vim:\nMovement    Keybinding Perintah     k Ke atas   j Ke bawah   l Ke kanan   h Ke kiri    Normal Mode    Keybinding Perintah     i Masuk Insert Mode   v Masuk Visual mode   : Masuk Command Mode   u Undo   CTRL-r Redo   / Memulai Pencarian   n Kata Pencarian Selanjutnya   N Kata Pencarian Sebelumnya    Visual Mode    Keybinding Perintah     ESC Kembali ke Normal Mode   : Masuk Command Mode   y Copy   d Cut   p Paste   x Delete    Command Mode    Keybinding Perintah     ESC Kembali ke Normal Mode   e Membuka Dokumen   w Menyimpan Dokumen   wq Menyimpan dan keluar dokumen   q Keluar dari Vim   q! Keluar dari Vim dengan paksa / Tanpa menyimpan perubahan dokumen    ","permalink":"https://atalazer.github.io/posts/belajar-vim-1/","summary":"Baca Ini Dulu Vim Text Editor\n Basic Keybindings Vim Dasar-dasar keybinding di Text Editor Vim:\nMovement    Keybinding Perintah     k Ke atas   j Ke bawah   l Ke kanan   h Ke kiri    Normal Mode    Keybinding Perintah     i Masuk Insert Mode   v Masuk Visual mode   : Masuk Command Mode   u Undo   CTRL-r Redo   / Memulai Pencarian   n Kata Pencarian Selanjutnya   N Kata Pencarian Sebelumnya    Visual Mode    Keybinding Perintah     ESC Kembali ke Normal Mode   : Masuk Command Mode   y Copy   d Cut   p Paste   x Delete    Command Mode    Keybinding Perintah     ESC Kembali ke Normal Mode   e Membuka Dokumen   w Menyimpan Dokumen   wq Menyimpan dan keluar dokumen   q Keluar dari Vim   q!","title":"Belajar Vim - part 1"},{"content":"Pendahuluan Pada kesempatan kali ini saya akan membahas Text Editor yang setiap hari saya gunakan, yaitu Vim (lebih tepatnya Neovim)\nApa itu Vim?  \u0026ldquo;Vim is a highly configurable text editor built to make creating and changing any kind of text very efficient.\u0026rdquo;\n- vim.org\n Vim atau singkatan dari VI iMproved adalah sebuah Text Editor yang minimal, cepat, ringan, dan efisien namun sangat fleksibel.\nVim diciptakan oleh Bram Moolenaar yang terinspirasi oleh Text Edit Vi yang ada di Unix oleh Bill Joy. Oleh karena itu Text Editor tersebut bernama Vim atau VI iMproved.\nKenapa Vim? Alasan kenapa kamu harus mencoba Vim:\n Free, Vim merupakan Text Editor open-source di bawah Lisensi GNU GPL. Mature, Vim sudah ada lebih dari 25 tahun. ( Di rilis pertama kali pada tahun 1991) Dimana-mana, Terinstall secara default pada Unix-like Sistem. Cepat dan Ringan, Vim tahu kalau dia cuma Text Editor. Keyboard driven, Banyak aksi yang bisa dilakukan dengan Vim hanya dengan Keyboard. Pengguna yang Setia, Komunitas Vim terkenal dengan loyalitas-nya. Extendable, Vim memiliki banyak themes dan plugins yang membuatnya sangat configurable  Selain itu, Vim mempunyai fitur yang khas jika dibandingkan text editor lain, yaitu Vim Mode. Vim mempunyai 4 mode utama yaitu Normal, Insert, Visual, dan Command. Berikut penjelasannya:\n Normal, mode default Vim dimana user hanya bisa melihat kode. Insert, mode dimana user biasa menulis kode. Visual, mode dimana user biasanya menyeleksi untuk memanipulasi kode yang dipilih. Command, mode dimana user biasa mengeksekusi perintah.  Fitur lain yang ada pada Vim adalah vimscript. Yaitu bahasa script yang digunakan untuk mengkonfigurasi Vim itu sendiri. Dengan adanya fitur ini, kita juga bisa membuat plugin milik kita sendiri. Selain itu, Vim sekarang juga mempunyai API pada bahasa lain seperti Python dan Ruby. Sehingga, kita bisa membuat plugin Vim semakin mudah.\nInstalasi Sebenarnya kabanyakan distro linux sudah terintall Vim secara default. Tapi dalam untuk beberapa distro minimalis seperti Arch Linux harus meng-install Vim sendiri. Kita bisa meng-install-nya menggunakan Package Manager Bawaan Distro Linux masing-masing.\nUntuk Arch Linux dan turunannya:\nsudo pacman -S vim # Vim sudo pacman -S neovim # Neovim Untuk Debian, Ubuntu dan turunannya:\nsudo apt install vim # Vim sudo apt install neovim # Neovim Untuk RHEL, Fedora dan turunannya:\nsudo dnf install vim # Vim sudo dnf install neovim # Neovim Selain itu, kita juga bisa men-download dan meng-compile sendiri. Sebelumnya, kita juga harus menginstall dependencies yang dibutuhkan. Untuk lebih lengkapnya, silakan melihat link di bawah ini.\n Vim Neovim  Buat yang Mau Belajar Vim Bagi kamu yang ingin mendalami Vim sampai jago, langkah awal yang bisa kamu lakukan adalah mengeksekusi command vimtutor di terminal. Command tersebut berisi tutorial singkat mengenai penggunaan Vim.\nSelain itu, kita juga bisa mencari sumber belajar di Internet. Berikut list resources dari internet yang membahas Vim:\n https://github.com/mhinz/vim-galore https://vimawesome.com/ https://alldrops.info/ https://devhints.io/vim https://devhints.io/vimscript https://riptutorial.com/topic?q=vim\u0026amp;submit=Search  Referensi  Vim Official Website  ","permalink":"https://atalazer.github.io/posts/vim-text-editor/","summary":"Pendahuluan Pada kesempatan kali ini saya akan membahas Text Editor yang setiap hari saya gunakan, yaitu Vim (lebih tepatnya Neovim)\nApa itu Vim?  \u0026ldquo;Vim is a highly configurable text editor built to make creating and changing any kind of text very efficient.\u0026rdquo;\n- vim.org\n Vim atau singkatan dari VI iMproved adalah sebuah Text Editor yang minimal, cepat, ringan, dan efisien namun sangat fleksibel.\nVim diciptakan oleh Bram Moolenaar yang terinspirasi oleh Text Edit Vi yang ada di Unix oleh Bill Joy.","title":"Vim/Neovim Text Editor"},{"content":"Awal Mula Mengenal Linux Di saat pandemi ini, saya mempunyai banyak waktu luang. Setiap harinya saya habiskan dengan menonton Anime, Film, Youtube-an, bermain games, dan iseng-iseng belajar programming.\nHingga pada suatu saat, ketika saya sedang asik menonton video youtube dan browsing. Saya merasakan laptop saya dengan sistem operasi Windows dan spek kentang RAM 2GB dan CPU Intel Celeron N3050, berjalan sangat lambat. Akhirnya saya browsing di internet mengenai cara mempercepat laptop saya yang kentang.\n Catatan: Laptop yang saya gunakan adalah laptop Asus X453SA\n Akhirnya saya mencari tahu berbagai cara untuk mempercepat kinerja laptop saya. Antara lain dengan menonaktifkan animasi, mengurangi aplikasi startup, meng-uninstall aplikasi yang tidak diperlukan, dan lain lagi. Akan tetapi, menurut saya hal-hal tersebut masih kurang membantu. Hingga akhirnya, saya mempunyai ide untuk mencoba meng-install Linux dual-boot dengan Windows.\nPertama Kali Menginstall Linux Pada saat percobaan, saya memilih Linux Mint sebagai sistem operasi yang akan saya gunakan. Jadi langkah pertama yang saya lakukan adalah men-download file ISO Linux Mint di official page-nya.\nSetelah itu saya mengatur partisi yang akan digunakan kemudian membuat bootable drive-nya ke flash disk saya menggunakan aplikasi Rufus.\nSetelah selesai membuat bootable drive-nya, saya kemudian me-restart laptop saya lalu masuk ke BIOS untuk booting ke Linux Mint. Dilanjutkan dengan proses instalasi mengikuti panduan.\nDisaat proses instalasi selesai, saya diperintahkan untuk melakukan restart/reboot. Setelah itu, saya me-restart laptop saya dan akhirnya masuk ke halaman desktop Linux Mint.\nPada pandangan pertama, saya merasa tampilan default dari Linux Mint cukup simple namun tetap cantik. Setelah itu saya mencoba membuka berbagai aplikasi default Linux Mint seperti File Managernya(Nemo), Web Browsernya(Firefox), dan lain-lain.\nSetelah mencoba melakuakan eksplorasi, saya mencoba untuk melakukan restart/reboot dan kembali ke Windows. Tetapi muncul sebuah masalah, yaitu SAYA TIDAK BISA KEMBALI KE WINDOWS.\nSaya pun panik, dan bodohnya saya malah mencoba melakukan install ulang Linux Mint dengan harapan OS Windows saya kembali.\nAkan tetapi, setelah mencoba melakukan install ulang, OS Windows saya masih juga tidak kembali. Saya pun akhirnya terpaksa untuk tetap menggunakan Linux.\nMulai Mengenal Linux Lebih Jauh Karena terpaksa, saya pun mulai menyesuaikan diri dengan OS Linux Mint. Saya mulai mengenal terminal, CLI, perintah-perintah dasar Linux, hierarki struktur file Linux, dan distro-distro Linux. Saya pun juga mulai mencoba-coba distro-distro Linux lainnya, Hingga akhirnya saya menjadi seorang Distro Hopper, yaitu sebutan untuk seorang yang suka menggonta-ganti distro.\nPada saat menjadi seorang Distro Hopper. Saya mencoba berbagai distro linux. Berikut list distro tersebut.\n   Nama Distro Lama Bertahan Catatan     Linux Mint (Cinnamon Edition) ~3 Hari Terasa berat di Laptop Saya ( Maklum spek kentang )   Xubuntu (Ubuntu XFCE Flavor) ~3 Bulan Cocok untuk Laptop kentang seperti punya saya   Kali Linux (XFCE) ~2 Minggu Ceritanya dual-boot dengan Xubuntu buat gaya-gayaan   MX Linux (XFCE Edition) ~2 Hari Masih terasa Agak berat di Laptop saya   Manjaro Linux (KDE) ~1 Hari Ceritanya lagi Installin Linux di Laptop Kakak   Manjaro Linux (XFCE) ~1 Hari Juga masih terasa Agak berat di Laptop saya   KDE Neon ~1 Minggu Tampilannya bagus ( Soalnya pake KDE)   Arch Linux Sampai sekarang Distro Minimalis tapi bukan untuk pemula   Artix Linux ~2 Bulan Arch Linux tanpa Systemd   Dan Lain-Lain  Sudah Lupa saking banyaknya yang udah dicoba    Semenjak mencoba Arch Linux, saya juga sudah berhenti menjadi distro hopper. Pada saat itu juga saya mengenal Linux lebih dalam lagi. Saya mulai mengenal Distro Package Manager, Desktop Customization, Dotfiles, dan lain-lain.\nApakah Betah Pakai Linux? Kalo saya ditanya pertanyaan ini, saya bakal bilang betah banget. Sampai-sampai saya nggak mau lagi pindah OS ke Windows lagi, kecuali kalo kepingin nge-game. Tetapi, semenjak saya pakai Linux, saya jadi jarang nge-game dan bisa fokus belajar programming. (walaupun tugas sekolah saya yang malah keteteran :v)\nSelain itu, Linux mempunyai kelebihan dibandingkan Windows yang bisa bikin saya betah memakainya, yaitu:\n  Open Source dan Free\nLinux itu gratis dalam harga dan bebas dalam artian \u0026ldquo;suka suka saya mau ngapain aja\u0026rdquo;. Karena ini juga, Linux mempunyai banyak sekali variasinya atau yang biasa disebut distro-distro Linux. Total distro linux di dunia kurang lebih 600 distro dan akan terus bertambah.\n  Ringan\nAlasan utama saya pindah ke Linux. Kita bisa melakukan tuning untuk mempercepat kinerja. Selain itu, kita bisa menyesuaikan tampilan sehingga perangkat menjadi lebih ringan.\n  Customizable\nKarena linux itu Free(bebas). Kita bisa sesukanya menyesuaikan tampilan dan tema. Mau dibuat kayak MacOS bisa, kayak Windows juga bisa, atau mau ala-ala kayak H*ck*r juga bisa.\n  Security\nKarena Linux bersifat open source, maka jika ada bug atau virus yang menyerang, developer akan cepat diperbarui untuk memperbaiki bug atau virus tersebut, dengan menerima laporan dari komunitas dan pengguna.\nJadi kalo kamu pake Linux, kamu nggak usah install anti-virus. Selain itu, banyak komputer server di seluruh penjuru dunia yang menggunakan Linux karena alasan keamanan ini.\n  Package Manager\nLinux punya tool yang keren dan mempermudah hidup, namanya package manager. Seperti namanya, tool ini berguna untuk mengatur package/aplikasi. Dengan ini, kita bisa men-download, meng-install, dan menghapus aplikasi dengan cepat.\n  Selain itu, belajar Linux itu nggak akan ada habisnya. Setiap harinya akan selalu ada hal-hal baru mengenai Linux. Oleh karena itu, saya menjadi sangat betah menggunakan Linux.\nAkhir Kata Untuk para pembaca, ayo sesekali coba pakai Linux! Biar kalian bisa tau rasanya pakai OS lain selain Windows. Selain itu, wawasan kita mengenai teknologi terus bertambah dan lebih terbuka.\nSekian dari saya, terima kasih.\n","permalink":"https://atalazer.github.io/posts/mengenal-linux/","summary":"Awal Mula Mengenal Linux Di saat pandemi ini, saya mempunyai banyak waktu luang. Setiap harinya saya habiskan dengan menonton Anime, Film, Youtube-an, bermain games, dan iseng-iseng belajar programming.\nHingga pada suatu saat, ketika saya sedang asik menonton video youtube dan browsing. Saya merasakan laptop saya dengan sistem operasi Windows dan spek kentang RAM 2GB dan CPU Intel Celeron N3050, berjalan sangat lambat. Akhirnya saya browsing di internet mengenai cara mempercepat laptop saya yang kentang.","title":"Mengenal Linux"}]